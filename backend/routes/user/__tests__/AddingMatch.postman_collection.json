{
	"info": {
		"_postman_id": "c7f117f3-e930-4316-ba32-39b39245bbd3",
		"name": "AddingMatch",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Delete Table",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "33d23260-1a29-47a3-b1ba-153c80bdbc66",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Body is correct\", function () {",
							"    pm.response.to.have.body({\"success\":true,\"rows\":\"delete all tables\"});",
							"});",
							"pm.test(\"success\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData['success']).to.eql(true);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "",
						"value": "application/json",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8000/user/tables",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"user",
						"tables"
					]
				},
				"description": "delete table\n"
			},
			"response": []
		},
		{
			"name": "Create Table",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "33d23260-1a29-47a3-b1ba-153c80bdbc66",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Body is correct\", function () {",
							"    pm.response.to.have.body({\"success\":true,\"rows\":\"all tables created\"});",
							"});",
							"pm.test(\"success\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData['success']).to.eql(true);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "",
						"value": "application/json",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"skill\": \"a\",\r\n    \"users\": \"1\"\r\n}"
				},
				"url": {
					"raw": "http://localhost:8000/user/tables",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"user",
						"tables"
					]
				},
				"description": "post tables"
			},
			"response": []
		},
		{
			"name": "Check number of match",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ee1cce81-25e8-4ec8-85d8-850832c00635",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"success\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData['success']).to.eql(true);",
							"});",
							"pm.test(\"have 0inside\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData['rows'].length).to.eql(0);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"first_name\": \"mike\", \r\n    \"last_name\": \"john\",\r\n    \"email_address\": \"mike@wisc.edu\", \r\n    \"biography\": \"hi\",\r\n    \"zipcode\": \"57585\", \r\n    \"date_of_birth\": \"2/24/1996\",\r\n    \"skills\": \"JAVA\",\r\n    \"profession\": \"Software Engineer\",\r\n    \"hobbies\": \"testiing hobbies\"\r\n}"
				},
				"url": {
					"raw": "http://localhost:8000/match",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"match"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post 1 match",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "48365ecc-3f52-4230-ae1a-e4c0a32e82d1",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"success\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData['success']).to.eql(true);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"mentor_id\": 1,\"mentee_id\": 2, \"ratings\" : 3\r\n}"
				},
				"url": {
					"raw": "http://localhost:8000/match",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"match"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check number of match",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ee1cce81-25e8-4ec8-85d8-850832c00635",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"success\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData['success']).to.eql(true);",
							"});",
							"pm.test(\"have 1 inside\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData['rows'].length).to.eql(1);",
							"    pm.globals.set(\"match_id\", jsonData['rows'][0]['match_id']);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"first_name\": \"mike\", \r\n    \"last_name\": \"john\",\r\n    \"email_address\": \"mike@wisc.edu\", \r\n    \"biography\": \"hi\",\r\n    \"zipcode\": \"57585\", \r\n    \"date_of_birth\": \"2/24/1996\",\r\n    \"skills\": \"JAVA\",\r\n    \"profession\": \"Software Engineer\",\r\n    \"hobbies\": \"testiing hobbies\"\r\n}"
				},
				"url": {
					"raw": "http://localhost:8000/match",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"match"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check number of match by match id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ee1cce81-25e8-4ec8-85d8-850832c00635",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"success\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData['success']).to.eql(true);",
							"});",
							"pm.test(\"have 1 inside\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData['rows'].length).to.eql(1);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"first_name\": \"mike\", \r\n    \"last_name\": \"john\",\r\n    \"email_address\": \"mike@wisc.edu\", \r\n    \"biography\": \"hi\",\r\n    \"zipcode\": \"57585\", \r\n    \"date_of_birth\": \"2/24/1996\",\r\n    \"skills\": \"JAVA\",\r\n    \"profession\": \"Software Engineer\",\r\n    \"hobbies\": \"testiing hobbies\"\r\n}"
				},
				"url": {
					"raw": "http://localhost:8000/match/matchid/{{match_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"match",
						"matchid",
						"{{match_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check number of match by user id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ee1cce81-25e8-4ec8-85d8-850832c00635",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"success\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData['success']).to.eql(true);",
							"});",
							"pm.test(\"have 1 inside\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData['rows'].length).to.eql(1);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"first_name\": \"mike\", \r\n    \"last_name\": \"john\",\r\n    \"email_address\": \"mike@wisc.edu\", \r\n    \"biography\": \"hi\",\r\n    \"zipcode\": \"57585\", \r\n    \"date_of_birth\": \"2/24/1996\",\r\n    \"skills\": \"JAVA\",\r\n    \"profession\": \"Software Engineer\",\r\n    \"hobbies\": \"testiing hobbies\"\r\n}"
				},
				"url": {
					"raw": "http://localhost:8000/match/userid/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"match",
						"userid",
						"1"
					]
				}
			},
			"response": []
		}
	]
}